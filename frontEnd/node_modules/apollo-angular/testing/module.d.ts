import { Apollo } from 'apollo-angular';
import { ApolloCache } from 'apollo-cache';
import { InjectionToken } from '@angular/core';
import { ApolloTestingBackend } from './backend';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'apollo-angular';
export declare type NamedCaches = Record<string, ApolloCache<any> | undefined | null>;
export declare const APOLLO_TESTING_CACHE: InjectionToken<ApolloCache<any>>;
export declare const APOLLO_TESTING_NAMED_CACHE: InjectionToken<Record<string, ApolloCache<any>>>;
export declare const APOLLO_TESTING_CLIENTS: InjectionToken<string[]>;
export declare class ApolloTestingModuleCore {
    constructor(apollo: Apollo, backend: ApolloTestingBackend, namedClients?: string[], cache?: ApolloCache<any>, namedCaches?: any);
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ApolloTestingModuleCore, never, [typeof ɵngcc1.ApolloModule], never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ApolloTestingModuleCore>;
}
export declare class ApolloTestingModule {
    static withClients(names: string[]): ({
        ngModule: typeof ApolloTestingModuleCore;
        providers: {
            provide: InjectionToken<string[]>;
            useValue: string[];
        }[];
    })&{ngModule:ApolloTestingModuleCore};
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ApolloTestingModule, never, [typeof ApolloTestingModuleCore], never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ApolloTestingModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmQudHMiLCJzb3VyY2VzIjpbIm1vZHVsZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7Ozs7Ozt5Q0FNcEM7OztBQUNMIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBvbGxvIH0gZnJvbSAnYXBvbGxvLWFuZ3VsYXInO1xuaW1wb3J0IHsgQXBvbGxvQ2FjaGUgfSBmcm9tICdhcG9sbG8tY2FjaGUnO1xuaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFwb2xsb1Rlc3RpbmdCYWNrZW5kIH0gZnJvbSAnLi9iYWNrZW5kJztcbmV4cG9ydCBkZWNsYXJlIHR5cGUgTmFtZWRDYWNoZXMgPSBSZWNvcmQ8c3RyaW5nLCBBcG9sbG9DYWNoZTxhbnk+IHwgdW5kZWZpbmVkIHwgbnVsbD47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBBUE9MTE9fVEVTVElOR19DQUNIRTogSW5qZWN0aW9uVG9rZW48QXBvbGxvQ2FjaGU8YW55Pj47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBBUE9MTE9fVEVTVElOR19OQU1FRF9DQUNIRTogSW5qZWN0aW9uVG9rZW48UmVjb3JkPHN0cmluZywgQXBvbGxvQ2FjaGU8YW55Pj4+O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQVBPTExPX1RFU1RJTkdfQ0xJRU5UUzogSW5qZWN0aW9uVG9rZW48c3RyaW5nW10+O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXBvbGxvVGVzdGluZ01vZHVsZUNvcmUge1xuICAgIGNvbnN0cnVjdG9yKGFwb2xsbzogQXBvbGxvLCBiYWNrZW5kOiBBcG9sbG9UZXN0aW5nQmFja2VuZCwgbmFtZWRDbGllbnRzPzogc3RyaW5nW10sIGNhY2hlPzogQXBvbGxvQ2FjaGU8YW55PiwgbmFtZWRDYWNoZXM/OiBhbnkpO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXBvbGxvVGVzdGluZ01vZHVsZSB7XG4gICAgc3RhdGljIHdpdGhDbGllbnRzKG5hbWVzOiBzdHJpbmdbXSk6IHtcbiAgICAgICAgbmdNb2R1bGU6IHR5cGVvZiBBcG9sbG9UZXN0aW5nTW9kdWxlQ29yZTtcbiAgICAgICAgcHJvdmlkZXJzOiB7XG4gICAgICAgICAgICBwcm92aWRlOiBJbmplY3Rpb25Ub2tlbjxzdHJpbmdbXT47XG4gICAgICAgICAgICB1c2VWYWx1ZTogc3RyaW5nW107XG4gICAgICAgIH1bXTtcbiAgICB9O1xufVxuIl19